@using Library.Model.Responses
@model Library.Model.Responses.ListVenta
@{
    ViewData["Title"] = "Home report";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>ImprimirVenta</title>
    <style>
        .contenedor {
           width: 900px !important;
           height:842px !important;
           margin:auto;
        }
        body{
           font-family:Arial, Helvetica, sans-serif
        }
        p.title{
           font-weight:bold;
        }
         p.title2{
           font-weight:bold;
           color: #03A99F;
           font-size:20px;
        }
        p.text{
           font-size:12x;
           font-weight:100;
           color:#858585;
        }
        p{
           margin:0px
        }
        .tbth{
           text-align:left;
        }

        table.tbproductos{
            border-collapse: separate;
            border-spacing: 4px;
        }

        table.tbproductos thead tr th {
           background-color: #03A99F;
           padding:10px;
           font-size:12px;
           color:white;
        }
        table.tbproductos tbody tr td{
           padding:10px;
        }
        .item{
           font-size:12px;
           font-weight:100;
           color:#757575;
        }
        .item-2{
        font-size:12px;
           font-weight:bold;
           color:#757575;
        }

        .item-3{
           font-size:12px;
           font-weight:bold;
           background-color:#03A99F;
           color:white;
        }

         .td-item {
           border-bottom:2px solid #E8E8E8 !important;
         }

        .highlight {
            background-color: yellow; /* O cualquier otro estilo de resaltado */
            font-weight: bold;
        }


    </style>
</head>
<body >

    <div class="table-container">
        @if (Model != null && Model.ListReport != null && Model.ListReport.Any())
        {
            <table class="tbproductos" style="width:100%" id="report_data">
                <thead>
                    <tr>
                        <th class="tbth" style="width:130px">Id</th>
                        <th class="tbth" style="width:130px">Nombre</th>
                        <th class="tbth" style="width:130px">Precio</th>
                        <th class="tbth" style="width:130px">Stock</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        Dictionary<string, List<Venta>> totales = Model.ListReport.GroupBy(x => x.IdVenta)
                        .ToDictionary(group => group.Key, group => group.ToList());

                        decimal? precio = 0, stock = 0M;
                    }
                    @foreach (var id in totales.Keys)
                    {
                        bool mostrarId = true;
                        foreach (var item in totales[id])
                        {
                            <tr>
                                @if (mostrarId)
                                {
                                    <td class=""><p>@id</p></td>
                                    mostrarId = false;
                                }
                                else
                                {
                                    <td class="td-item"></td>
                                }
                                <td class="td-item"><p class="item">@item.nombre</p></td>
                                <td class="td-item"><p class="item">@item.precio</p></td>
                                <td style="background-color:#EDF6F9"><p class="item">@item.stock</p></td>
                            </tr>

                            precio += item.precio;
                            stock += item.stock;
                        }
                        <tr style="background-color:#FFE6E6; font-weight: bold;">
                            <td class=""><p>TOTAL:</p></td>
                            <td class=""><p></p></td>
                            <td class=""><p>@precio</p></td>
                            <td class=""><p>@stock</p></td>
                        </tr>
                        precio = 0M;
                        stock = 0M;
                    }
                </tbody>
            </table>
        }
        else
        {
            <p>No hay datos disponibles.</p>
        }
    </div>
    
    <script type="text/javascript">
        document.addEventListener('DOMContentLoaded', function () {
            const table = document.getElementById('report_data');
            const rows = table.querySelectorAll('tbody tr');
            const rowsPerPage = 5; // Ajusta según tus necesidades
            let currentPage = 1;

            function showPage(page) {
                const start = (page - 1) * rowsPerPage;
                const end = start + rowsPerPage;

                rows.forEach((row, index) => {
                    if (index >= start && index < end) {
                        row.style.display = 'table-row';
                    } else {
                        row.style.display = 'none';
                    }
                });
            }

            function updateButtons() {
                document.getElementById('pageNumber').textContent = currentPage;
                document.getElementById('prevButton').disabled = currentPage === 1;
                document.getElementById('firstPageButton').disabled = currentPage === 1;
                document.getElementById('nextButton').disabled = currentPage === Math.ceil(rows.length / rowsPerPage);
                document.getElementById('lastPageButton').disabled = currentPage === Math.ceil(rows.length / rowsPerPage);
            }

            function goToPage(page) {
                currentPage = Math.min(Math.max(1, page), Math.ceil(rows.length / rowsPerPage));
                showPage(currentPage);
                updateButtons();
            }

            function highlightSearchTerm(row) {
                const searchTerm = document.getElementById('searchInput').value.toLowerCase();
                const cells = row.querySelectorAll('td');

                cells.forEach(cell => {
                    const cellText = cell.innerText.toLowerCase();
                    const index = cellText.indexOf(searchTerm);

                    if (index !== -1) {
                        // Aplica el resaltado solo a la palabra buscada en la celda actual
                        const newText = cellText.substring(0, index) +
                            `<span style="background-color: yellow; font-weight: bold;">${cellText.substring(index, index + searchTerm.length)}</span>` +
                            cellText.substring(index + searchTerm.length);
                        cell.innerHTML = newText;
                    }
                });
            }

            function clearHighlighting() {
                rows.forEach(row => {
                    const cells = row.querySelectorAll('td');
                    cells.forEach(cell => {
                        cell.innerHTML = cell.textContent;
                    });
                });
            }

            document.getElementById('prevButton').onclick = function () {
                goToPage(currentPage - 1);
            };

            document.getElementById('firstPageButton').onclick = function () {
                goToPage(1);
            };

            document.getElementById('nextButton').onclick = function () {
                goToPage(currentPage + 1);
            };

            document.getElementById('lastPageButton').onclick = function () {
                goToPage(Math.ceil(rows.length / rowsPerPage));
            };

            document.getElementById('button').onclick = function () {
                const searchTerm = document.getElementById('searchInput').value.toLowerCase();

                if (searchTerm.trim() !== '') {
                    let found = false;
                    let targetPage = 1;

                    clearHighlighting();

                    rows.forEach((row, index) => {
                        highlightSearchTerm(row);

                        if (!found) {
                            const textContent = row.innerText.toLowerCase();
                            if (textContent.includes(searchTerm)) {
                                found = true;
                                targetPage = Math.ceil((index + 1) / rowsPerPage);
                            }
                        }
                    });

                    goToPage(targetPage);
                } else {
                    // Si la barra de búsqueda está vacía, simplemente vuelve a la primera página
                    clearHighlighting();
                    goToPage(1);
                }
            };

            // Mostrar la primera página al cargar
            showPage(currentPage);
            updateButtons();
        });


    </script>
</body>
</html>
